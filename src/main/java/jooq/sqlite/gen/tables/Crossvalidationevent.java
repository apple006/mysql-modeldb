/**
 * This class is generated by jOOQ
 */
package jooq.sqlite.gen.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.sqlite.gen.Keys;
import jooq.sqlite.gen.ModeldbTest;
import jooq.sqlite.gen.tables.records.CrossvalidationeventRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Crossvalidationevent extends TableImpl<CrossvalidationeventRecord> {

    private static final long serialVersionUID = -226261393;

    /**
     * The reference instance of <code>modeldb_test.CrossValidationEvent</code>
     */
    public static final Crossvalidationevent CROSSVALIDATIONEVENT = new Crossvalidationevent();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CrossvalidationeventRecord> getRecordType() {
        return CrossvalidationeventRecord.class;
    }

    /**
     * The column <code>modeldb_test.CrossValidationEvent.id</code>.
     */
    public final TableField<CrossvalidationeventRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>modeldb_test.CrossValidationEvent.df</code>.
     */
    public final TableField<CrossvalidationeventRecord, Integer> DF = createField("df", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>modeldb_test.CrossValidationEvent.spec</code>.
     */
    public final TableField<CrossvalidationeventRecord, Integer> SPEC = createField("spec", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>modeldb_test.CrossValidationEvent.numFolds</code>.
     */
    public final TableField<CrossvalidationeventRecord, Integer> NUMFOLDS = createField("numFolds", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>modeldb_test.CrossValidationEvent.randomSeed</code>.
     */
    public final TableField<CrossvalidationeventRecord, Long> RANDOMSEED = createField("randomSeed", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>modeldb_test.CrossValidationEvent.evaluator</code>.
     */
    public final TableField<CrossvalidationeventRecord, String> EVALUATOR = createField("evaluator", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>modeldb_test.CrossValidationEvent.experimentRun</code>.
     */
    public final TableField<CrossvalidationeventRecord, Integer> EXPERIMENTRUN = createField("experimentRun", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>modeldb_test.CrossValidationEvent</code> table reference
     */
    public Crossvalidationevent() {
        this("CrossValidationEvent", null);
    }

    /**
     * Create an aliased <code>modeldb_test.CrossValidationEvent</code> table reference
     */
    public Crossvalidationevent(String alias) {
        this(alias, CROSSVALIDATIONEVENT);
    }

    private Crossvalidationevent(String alias, Table<CrossvalidationeventRecord> aliased) {
        this(alias, aliased, null);
    }

    private Crossvalidationevent(String alias, Table<CrossvalidationeventRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return ModeldbTest.MODELDB_TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CrossvalidationeventRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CROSSVALIDATIONEVENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CrossvalidationeventRecord> getPrimaryKey() {
        return Keys.KEY_CROSSVALIDATIONEVENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CrossvalidationeventRecord>> getKeys() {
        return Arrays.<UniqueKey<CrossvalidationeventRecord>>asList(Keys.KEY_CROSSVALIDATIONEVENT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CrossvalidationeventRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CrossvalidationeventRecord, ?>>asList(Keys.CROSSVALIDATIONEVENT_IBFK_1, Keys.CROSSVALIDATIONEVENT_IBFK_2, Keys.CROSSVALIDATIONEVENT_IBFK_3);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Crossvalidationevent as(String alias) {
        return new Crossvalidationevent(alias, this);
    }

    /**
     * Rename this table
     */
    public Crossvalidationevent rename(String name) {
        return new Crossvalidationevent(name, null);
    }
}
